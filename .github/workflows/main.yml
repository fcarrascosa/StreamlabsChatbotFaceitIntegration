name: CI
on:
  push:
  pull_request:

jobs:
  semantic-version:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'Changelog and new version for')"
    steps:
      - name: Set Git Config
        run: |
          git config --global user.name github-actions
          git config --global user.email github-actions@github.com
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          token: ${{ secrets.GH_PERSONAL_TOKEN }}
      - name: Generating New Semantic Version - Dry Run
        uses: mathieudutour/github-tag-action@v5.1
        id: semantic_version_dry
        with:
          default_bump: false
          create_annotated_tag: true
          dry_run: true
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Update version and Changelog
        run: |
          touch CHANGELOG.md
          echo "${{ steps.semantic_version_dry.outputs.changelog }}" | cat - CHANGELOG.md > temp && mv temp CHANGELOG.md
          sed -i --regexp-extended -e 's/(Version = )("[[:digit:]]\.[[:digit:]]\.[[:digit:]](-.*)?")/Version = "${{ steps.semantic_version_dry.outputs.new_version }}"/' ./FaceitIntegration/FaceitIntegration_StreamlabsSystem.py
      - name: Commit and Push new changes
        if: "contains(github.ref, 'main') && contains(steps.semantic_version_dry.outputs.new_tag, 'v')"
        run: |
          git add CHANGELOG.md
          git add ./FaceitIntegration/FaceitIntegration_StreamlabsSystem.py
          git commit -m "Changelog and new version for ${{ steps.semantic_version_dry.outputs.new_version }}"
          git push origin ${{ github.ref }}

  semantic-release:
    runs-on: ubuntu-latest
    if: "contains(github.event.head_commit.message, 'Changelog and new version for')"
    steps:
      - name: Set Git Config
        run: |
          git config --global user.name github-actions
          git config --global user.email github-actions@github.com
      - uses: actions/checkout@master
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Generating New Semantic Version
        uses: mathieudutour/github-tag-action@v5.1
        id: semantic_version
        with:
          default_bump: false
          create_annotated_tag: true
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Create a GitHub release
        uses: actions/create-release@v1
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.semantic_version.outputs.new_tag }}
          release_name: Release ${{ steps.semantic_version.outputs.new_tag }}
          body: ${{ steps.semantic_version.outputs.changelog }}
      - name: Generate release assets
        run: |
          zip -r faceit-integration-${{ steps.semantic_version.outputs.new_version }}.zip README.md FaceitIntegration
      - name: Upload release artifacts
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./faceit-integration-${{ steps.semantic_version.outputs.new_version }}.zip
          asset_name: faceit-integration-${{ steps.semantic_version.outputs.new_version }}.zip
          asset_content_type: application/zip